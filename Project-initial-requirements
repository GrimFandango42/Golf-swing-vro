Project Requirements Document: "SwingSync AI" - A Real-Time Golf Swing Analysis Platform
Part 1: The Biomechanical Model: Defining the "Digital Pro"
This section establishes the scientific and coaching foundation of the SwingSync AI application. It defines the core principles of an effective golf swing, creating a dynamic, data-driven "Digital Pro" model. This model serves not as a rigid, singular ideal, but as a comprehensive framework of biomechanical checkpoints against which all user swings will be measured. The system's intelligence lies in its ability to use this framework to provide personalized, context-aware feedback, recognizing that optimal movement varies between individuals.
1.1. The P-System: A Phased Approach to Swing Analysis
The fundamental analytical framework for SwingSync AI will be the P-System, a methodology that deconstructs the continuous motion of a golf swing into ten distinct, sequential positions, labeled P1 through P10. This phased approach is critical for the AI's analytical process. It transforms the swing from a monolithic event into a structured timeline of discrete checkpoints, allowing for granular analysis of key body movements, club positions, and, most importantly, the transitions between these phases. This structure moves the application's feedback beyond a simplistic "good" or "bad" judgment to a specific, actionable diagnosis of where and when a fault occurs in the swing sequence.
The initial and most critical step in the AI analysis pipeline will be the temporal segmentation of the captured video. The system's computer vision model will classify each frame of the swing into one of the ten P-positions. This classification provides the temporal context necessary for all subsequent biomechanical analysis.
The P-System positions are defined as follows :
P1: Address: The static starting position. This includes the golfer's setup, posture, grip, and alignment relative to the ball and target.
P2: Takeaway: The initiation of the swing, concluding when the club shaft is parallel to the ground.
P3: Halfway Back: The point in the backswing where the lead arm is parallel to the ground.
P4: Top of the Backswing: The apex of the backswing, representing the transition point from backswing to downswing.
P5: Early Downswing: The initial phase of the downswing, concluding when the club shaft is again parallel to the ground.
P6: Pre-Impact: The final phase before impact, where the club shaft is parallel to the ground. This position is critical for analyzing lag and stored energy.
P7: Impact: The moment of contact between the clubface and the ball.
P8: Release: The immediate post-impact phase where the arms fully extend and rotate.
P9: Finish: The follow-through phase where the lead arm is again parallel to the ground on the lead side of the body.
P10: End of Swing: The final, balanced position after the swing is complete.
1.2. Anatomical and Kinematic Checkpoints: The Metrics of a Great Swing
For each of the ten P-positions, the system will define and measure a set of ideal biomechanical parameters, or key performance indicators (KPIs). These are the specific, quantifiable data points that the application's pose estimation model will extract from the video feed. This process creates a multi-dimensional "fingerprint" of the user's swing at every critical moment. The selection of these checkpoints is informed by established golf instruction and biomechanical research, focusing on the elements that high-level coaches identify as crucial for a successful swing.
The following key checkpoints, categorized by their corresponding P-position, will form the basis of the analysis:
P1 (Address): The foundation of the swing is set before the club even moves.
Posture: The system will measure key postural angles, including the degree of forward tilt from the hips (hip hinge) and the amount of knee flex. A stable, athletic posture with a relatively straight spine is the target.
Alignment: The pose estimation model will assess the alignment of the feet, hips, and shoulders, which should be parallel to the intended target line for most shots.
Weight Distribution: The system will infer weight distribution based on the position of the body's center of mass relative to the feet. For iron shots, the ideal is an even 50/50 distribution. For a driver, a slight shift towards the trail foot (e.g., 40/60) is preferable to promote an upward angle of attack.
Ball Position: The system will verify the ball's position relative to the user's stance, a critical factor that varies by club. The ideal position is near the center of the stance for short irons and wedges, and progressively forward, reaching the inside of the lead heel for the driver.
P2 (Takeaway): The initiation of the swing sets the path and plane for the rest of the motion.
Movement Synchronization: The system will analyze the relative motion of the hands, arms, and shoulders to verify a "one-piece takeaway," where these segments move together as a connected unit. This prevents the hands from independently manipulating the club early in the swing.
Club Position and Face Angle: When the club shaft is parallel to the ground (P2), the clubface should be "square" to the swing arc, meaning the toe of the club points neither excessively up to the sky nor down at the ground.
Tempo: The takeaway should be initiated smoothly, or "low and slow," to maintain balance and set a consistent rhythm for the entire swing.
P4 (Top of the Backswing): This position represents the peak of stored energy.
Body Rotation: The system will measure the degree of shoulder and hip rotation. A full shoulder turn, ideally around 90 degrees with the golfer's back facing the target, is essential for maximizing power. Hip rotation should be approximately half that of the shoulders, around 45 degrees.
Lead Wrist Position: This is a critical checkpoint often analyzed by advanced coaching tools. The ideal position for the lead wrist at the top is flat (0 degrees of extension) or slightly bowed (flexed). An extended or "cupped" wrist at this stage often leads to an open clubface and a slice.
Weight Transfer: A significant majority of the golfer's weight, approximately 75% to 95%, should be transferred to the trail foot, loading the trail side in preparation for the downswing.
P7 (Impact): The "moment of truth" where all preceding movements culminate.
Body Position: The hips should be rotated open towards the target, leading the upper body. The golfer's head should remain behind the position of the ball, which facilitates a powerful strike and proper weight transfer.
Hand Position and Shaft Lean: The hands must be ahead of the golf ball at impact, creating a "forward shaft lean." This is a hallmark of skilled ball strikers and ensures a downward, compressing strike on the ball with irons.
Weight Transfer: The majority of the golfer's weight, around 70% or more for iron shots, should have shifted to the lead foot by impact, indicating a dynamic and powerful weight transfer through the ball.
Clubface Alignment: The ultimate goal is a clubface that is perfectly square to the target line at the moment of impact, which is the primary determinant of the shot's initial direction.
P10 (End of Swing): The finish position is an indicator of the quality and balance of the entire swing.
Balance: The golfer should finish in a stable, controlled position, with almost all weight on the lead foot and the heel of the trail foot lifted off the ground, balanced on the toe. Any unsteadiness or "happy feet" suggests a loss of balance during the swing.
Full Rotation: The chest and belt buckle should be facing the target, demonstrating a complete rotation of the body through the shot.
Hand and Club Position: The hands should finish high, and the club shaft should be behind the head or shoulders, indicating a full and uninhibited release of the club through impact.
1.3. Fault Diagnosis Matrix: The AI's Coaching Playbook
The intellectual core of SwingSync AI is the Fault Diagnosis Matrix. This is the logic engine that translates the quantitative data extracted from the pose estimation model into qualitative, actionable coaching advice. The matrix systematically maps common golf swing faults—such as a slice, hook, casting, or early extension—to specific, measurable deviations from the ideal biomechanical checkpoints defined in the previous section.
A critical design choice is to move beyond a simple, deterministic error-checking system. A purely rigid model that flags any deviation from a single "pro" template would be brittle and could provide feedback that is technically correct but practically unhelpful or even detrimental to a specific user's physique or skill level. The system must function as an adaptive coach, not a binary judge.
To achieve this, the system will leverage a Large Language Model (LLM), such as Gemini, to generate feedback. The biomechanical model and the Fault Diagnosis Matrix will not produce the final feedback text themselves. Instead, they will generate a structured, semantic input for the LLM. For example, instead of outputting a sterile message like, "Error: Shoulder turn is 80°, which is 10° less than the ideal 90°," the system will identify this deviation and use it to construct a detailed prompt for the LLM. This prompt will include the observed data, the ideal range, the associated fault, and contextual information about the user. The LLM then uses this prompt to generate a supportive, encouraging, and personalized tip. This approach allows the feedback to be nuanced, contextual, and conversational, mirroring the style of a human coach.
The Fault Diagnosis Matrix, therefore, will contain not just error codes but also "feedback intents" and LLM prompt templates that guide the AI in generating high-quality, personalized advice. This structure makes the system's knowledge base scalable and maintainable; as new coaching insights emerge, new rows can be added to the matrix without altering the core application code.
The table below provides an excerpt from the Fault Diagnosis Matrix, illustrating how it connects quantitative data to qualitative faults and generates context-aware prompts for the LLM. This matrix is the crucial link between the Computer Vision module and the Natural Language Generation module, forming the heart of the app's intelligence.
P-Position
Biomechanical Metric
Ideal Range (7-Iron)
Observed Deviation (Example)
Associated Fault
LLM Prompt Template
P4
Lead Wrist Flexion/Extension
-5^{\circ} (Bowed) to +5^{\circ} (Flat)
+25^{\circ} (Extended/Cupped)
Casting / Slice
User's lead wrist is excessively extended (cupped) at the top of the backswing (P4). Explain how this can open the clubface, leading to casting and a slice. Suggest the feeling of a 'flat' or 'bowed' wrist. Provide one simple drill to practice this.
P5
Club Path
Inside-to-Square
Outside-to-In
Over-the-Top / Slice
User's club is coming 'over the top' in the early downswing (P5). Explain this concept simply as the club moving away from the body and cutting across the ball. Recommend a drill focusing on starting the downswing with the lower body to help shallow the club path.
P7
Hip Rotation (Relative to Target Line)
40^{\circ}-50^{\circ} Open
10^{\circ} Open
Stalled Rotation / Loss of Power
User's hips are not rotating enough through impact (P7). Explain that this 'stalled rotation' can cause a loss of power and inconsistency, forcing the hands and arms to do all the work. Suggest the feeling of 'clearing the hips' towards the target.
P1
Posture (Spine Angle)
\sim35^{\circ}-45^{\circ} from vertical
\sim20^{\circ} (Too Upright)
Early Extension
User's setup posture (P1) is too upright, lacking a proper hip hinge. Explain that this makes it difficult to maintain spine angle during the swing, often causing the body to stand up through impact, a fault known as 'early extension'. Suggest a drill to feel the correct athletic posture.

Part 2: System Architecture and Technical Specifications
This section presents the comprehensive engineering blueprint for the SwingSync AI application. It details the high-level system architecture, the sequential AI analysis pipeline, and the specific technologies recommended for building a robust, scalable, and performant system.
2.1. High-Level Architecture: A Hybrid Edge-Cloud Framework
The system will be architected using a hybrid model that intelligently distributes the computational workload between the user's mobile device (the "edge") and a cloud-based backend. This architecture is essential to meet the conflicting demands of real-time, low-latency feedback and the need for intensive data processing, long-term storage, and complex AI model execution.
Edge (On-Device) Components: The native mobile application will be responsible for tasks where low latency is paramount to the user experience.
Responsibilities:
Video Capture: High-frame-rate video recording using the device's native camera APIs.
Real-Time Pose Estimation: Executing a lightweight, efficient 3D pose estimation model on each frame of the video to extract skeletal keypoints.
Immediate Visual Feedback: Rendering the skeletal overlay, key angles, and swing path lines directly onto the video playback for instant visual analysis.
Rationale: Performing these tasks on-device minimizes the round-trip time to a server, providing the "instant replay" feel that is critical for a practice tool used on the driving range. A user needs to see their swing motion immediately after they've made it.
Technology: The application will be developed natively for iOS (Swift) and Android (Kotlin) to ensure maximum performance and access to hardware features. On-device machine learning will be handled by frameworks like TensorFlow Lite, PyTorch Mobile, or Apple's Core ML.
Cloud (Backend) Components: The server-side infrastructure will handle tasks that are computationally expensive, require large datasets, or involve persistent data management.
Responsibilities:
User Authentication and Profile Management: Securely managing user accounts, preferences, and personal data.
Video and Data Storage: Archiving raw video files and the extracted biomechanical data for historical analysis.
Advanced Analysis: Executing the Fault Diagnosis Matrix logic and performing more complex classifications.
LLM-Based Feedback Generation: Constructing prompts and interfacing with the external LLM API (e.g., Gemini) to generate natural language feedback and drills.
Historical Performance Analytics: Aggregating data over time to generate progress charts and identify long-term trends.
Model Training and Updates: Hosting the MLOps pipeline for retraining and fine-tuning the AI models.
Rationale: Offloading these tasks to the cloud ensures that the mobile app remains lightweight and responsive. It also provides the scalability needed to support a growing user base and allows for the use of powerful AI models that are too large to run on a mobile device.
Technology: The backend will be built using a major cloud provider (e.g., AWS, Google Cloud, Azure) and will consist of containerized microservices (Docker, Kubernetes) to ensure scalability and maintainability. A robust API gateway will manage communication between the client and the backend services.
2.2. The AI/ML Analysis Pipeline: From Pixels to Prescription
The core of the application is a multi-stage AI/ML pipeline that transforms raw video pixels into personalized coaching prescriptions. This pipeline is a carefully orchestrated sequence of specialized models and logic modules that work in concert across the edge and cloud components.
The data flows through the following stages:
Video Ingestion & Pre-processing (Edge): The user records a swing. The mobile app captures video at the highest available frame rate (e.g., 120 or 240 FPS for superior temporal resolution). Each frame is resized, normalized, and prepared as input for the pose estimation model.
Real-Time 3D Pose Estimation (Edge): A highly efficient pose estimation model, such as MediaPipe Pose, MoveNet, or a custom-trained YOLOv8-Pose model, is executed on the video stream directly on the user's device. This model identifies the 3D coordinates (x, y, z) of 33 or more key anatomical landmarks (e.g., shoulders, elbows, wrists, hips, knees, ankles) for each frame. The output is a time-series dataset of the user's skeletal structure throughout the swing.
Biomechanical KPI Extraction & P-System Classification (Edge/Cloud): The raw 3D keypoint data is mathematically transformed into the meaningful biomechanical KPIs defined in Part 1 (e.g., shoulder rotation angle, wrist extension angle, spine tilt). Concurrently, a classification model analyzes the sequence of movements to segment the swing into the P1-P10 phases. This step can be executed on-device for speed or on the server if a more complex classification model is required.
Fault Detection via Biomechanical Model (Cloud): The extracted KPIs for each P-position are uploaded to the cloud. The backend server compares this data against the ideal ranges defined in the Fault Diagnosis Matrix (Table 1). The system identifies all significant deviations and maps them to their corresponding, pre-defined swing faults.
Intelligent Feedback Generation (Cloud): The list of identified faults, along with their severity and contextual data (e.g., club used, user's skill level), is used to programmatically populate the LLM prompt templates from the Fault Diagnosis Matrix. A secure API call is made to a generative AI service (e.g., Google's Gemini API). The LLM processes the structured prompt and generates a cohesive, natural language response that includes an explanation of the primary fault, a corrective tip, and a suggested drill to practice.
Feedback Delivery and Visualization (Edge): The structured feedback from the LLM (text, drill name, etc.) is sent back to the mobile app. The app then presents this information to the user in a clear, intuitive interface. This includes displaying the text feedback alongside the video replay, which is now enhanced with the automatically generated skeletal overlay, key angle visualizations, and swing path drawings.
2.3. Recommended Technology Stack
The selection of the technology stack is driven by the need for high performance, scalability, a rich developer ecosystem, and robust support for machine learning operations (MLOps). The architecture must be designed not as a static application but as a living AI system that can be continuously improved.
The initial AI models, particularly for pose estimation, will likely be pre-trained on large, general-purpose datasets like COCO. While effective, their accuracy can be significantly enhanced by fine-tuning them on a specialized dataset of golf swings. Similarly, the effectiveness of the LLM-generated feedback can be improved by analyzing which tips lead to measurable user improvement. This necessitates an MLOps-ready architecture that supports a continuous feedback loop: collecting anonymized user data (with explicit consent), using this data to retrain and fine-tune models, versioning these models, and deploying the improved versions to users seamlessly. This requirement for continuous evolution directly informs the technology choices below.
Mobile Client (Frontend):
Platform: iOS (Swift) & Android (Kotlin). Native development is non-negotiable for achieving the required performance, camera control, and on-device ML integration.
On-Device ML: Google's MediaPipe framework is a strong initial choice, as it provides pre-built, highly optimized pipelines for tasks like 3D pose estimation, which can significantly accelerate development. Alternatively, TensorFlow Lite can be used to deploy custom-trained models.
Backend (Cloud):
Cloud Provider: Google Cloud Platform (GCP) is recommended due to its strong AI/ML offerings, particularly the seamless integration between Vertex AI (for model training and hosting) and the Gemini API for generative feedback. Amazon
